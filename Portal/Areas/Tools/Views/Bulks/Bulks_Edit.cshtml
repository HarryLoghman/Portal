@model Portal.Models.Bulks_EditViewModel
@{
    ViewBag.Title = "تعریف Bulk";
}

@using (Html.BeginForm("Bulks_Edit", "Bulks", FormMethod.Post, new { @class = "form-horizontal", role = "form", spellcheck = "false", autocomplete = "off", autocorrect = "off", autocapitalize = "off" }))
{
    @Html.AntiForgeryToken()

    <hr />

    if (TempData["message"] != null)
    {
        <script type="text/javascript">
        alert(@Html.Raw(Json.Encode(TempData["message"])));
        </script>
    }

    @Html.ValidationSummary("", new { @class = "text-danger", style = "color:red" })
    var readonlyStr = "";
    <div class="form-group">
        @{
            if (Model != null && Model.startTime.HasValue && Model.startTime.Value < DateTime.Now)
            {
                <div class="text-danger" style="color:red">
                    زمان تغییرات به پایان رسیده است
                </div>
                readonlyStr = "readonly='readonly'";
            }
        }
        <div class="col-md-10" style="padding-top:10px;">
            @Html.LabelFor(m => m.service, new { @class = "col-md-2 control-label" })
            @if (Model != null && Model.BulkId.HasValue)
            {
                @Html.DropDownListFor(m => m.service, (IEnumerable<SelectListItem>)ViewBag.Services, new { disabled = "disabled", style = "background-color:#d8d8d8;color:gray;", @class = "col-md-2 control-label k-input" })
                @Html.HiddenFor(x => x.service)
            }
            else
            {
                @Html.DropDownListFor(m => m.service, (IEnumerable<SelectListItem>)ViewBag.Services, new { @class = "col-md-2 control-label k-input" })
            }
        </div>
        <div class="col-md-10" style="padding-top:10px;">

            @Html.LabelFor(m => m.BulkId, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.BulkId, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;" })

            @Html.LabelFor(m => m.BulkName, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.BulkName, new { @class = "col-md-2 control-label k-input", style = "width:150px;margin-left:20px;" })
        </div>
        <div class="col-md-10" style="padding-top:10px;">
            @Html.LabelFor(m => m.tps, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.tps, new { @class = "col-md-2 control-label k-input", style = "width:50px;margin-left:20px;" })

            @Html.LabelFor(m => m.startTime, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.startTime, new { @class = "", style = "direction:ltr" })

            @Html.LabelFor(m => m.endTime, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.endTime, new { @class = "", style = "direction:ltr" })

        </div>

        <div class="col-md-10" style="padding-top:10px; vertical-align:text-top;line-height:normal">
            @Html.LabelFor(m => m.message, new { @class = "col-md-2 control-label" })
            @Html.TextAreaFor(m => m.message, new { @class = "col-md-2 control-label k-input", style = "width:75%; height:100px;" })
        </div>


        <div class="col-md-10" style="padding-top:10px;">
            <div style="display:inline-block">
                @Html.LabelFor(m => m.readSize, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(m => m.readSize, new { @class = "col-md-2 control-label k-input", style = "width:100px;" })
            </div>
            <div style="direction:ltr;margin-left:20px;display:inline-block;">(0 means all record)</div>

            @Html.LabelFor(m => m.retryCount, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.retryCount, new { @class = "col-md-2 control-label k-input", style = "width:50px;" })
            @Html.LabelFor(m => m.retryIntervalInSeconds, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.retryIntervalInSeconds, new { @class = "col-md-2 control-label k-input", style = "width:50px;" })

        </div>

        <div class="col-md-10" style="padding-top:10px;">
            @Html.LabelFor(m => m.status, new { @class = "col-md-2 control-label" })
            @Html.EnumDropDownListFor(m => m.status, new { @class = "col-md-2 control-label k-input", style = "margin-left:20px;" })

            @Html.LabelFor(m => m.DateCreated, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.DateCreated, new { @class = "col-md-2 control-label k-input", style = "direction:ltr;background-color:#d8d8d8;color:gray;margin-left:20px;", @readonly = "readonly" })
            @Html.LabelFor(m => m.PersianDateCreated, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.PersianDateCreated, new { @class = "col-md-2 control-label k-input", style = "direction:ltr;background-color:#d8d8d8;color:gray;margin-left:20px;", @readonly = "readonly" })

            @Html.LabelFor(m => m.TotalMessages, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.TotalMessages, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;margin-left:20px;width:100px;" })
        </div>
        <div class="col-md-10" style="padding-top:10px;">


            @Html.LabelFor(m => m.TotalSuccessfullySent, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.TotalSuccessfullySent, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;margin-left:20px;width:75px;" })

            @Html.LabelFor(m => m.TotalFailed, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.TotalFailed, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;margin-left:20px;width:75px;" })

            @Html.LabelFor(m => m.TotalRetryCount, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.TotalRetryCount, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;margin-left:20px;width:50px;" })

            @Html.LabelFor(m => m.TotalRetryCountUnique, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.TotalRetryCountUnique, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;margin-left:20px;width:50px;" })

            @Html.LabelFor(m => m.TotalDelivery, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.TotalDelivery, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;margin-left:20px;width:50px;" })
        </div>
        <div class="col-md-10" style="padding-top:10px;">

            @Html.LabelFor(m => m.bulkFile, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.bulkFile, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;margin-left:20px;width:200px;" })
        </div>
        @{
            if (Model.BulkId.HasValue)
            {
                <div class="col-md-10" style="padding-top:20px;text-align:center;">
                    @{
                        if (Model != null && Model.startTime.HasValue && Model.startTime.Value < DateTime.Now)
                        {
                            <button id="transfer" class="k-primary k-button" disabled="disabled" style="width: 200px;background:gray;" onclick="window.location = '/Tools/Bulks/Bulks_Numbers/@Model.BulkId.Value'; return false;"><span>انتقال شماره های موبایل</span></button>
                        }
                        else
                        {
                            <button id="transfer" class="k-primary k-button" style="width: 200px;background:gray;" onclick="window.location = '/Tools/Bulks/Bulks_Numbers/@Model.BulkId.Value'; return false;"><span>انتقال شماره های موبایل</span></button>
                        }

                    }

                    <input type="submit" id="deleteNumbers" class="k-primary k-button" style="width: 200px;background:gray;" onclick="if(confirm('آیا از حذف شماره های انتقال یافته اطمینان دارید؟ توجه داشته باشید تنها شماره هایی حذف می شوند که ارسال نشده باشند')) return true; return false;" value="حذف شماره های انتقال یافته" name="deleteNumbers" />
                </div>
            }
        }

        <div class="col-md-10" style="padding-top:20px;text-align:center;">
            @{
                //if (Model != null && Model.startTime.HasValue && Model.startTime.Value < DateTime.Now)
                //{
                //  <input type="submit" id="save" disabled="disabled" class="k-primary k-button" style="width: 10%;margin-right:10px" value="ذخیره" name="save" />
                //}
                //else
                //{
                //<input type="submit" id="save" class="k-primary k-button" style="width: 10%;margin-right:10px" value="ذخیره" name="save" />

                //}
            }

            <input type="submit" id="save" class="k-primary k-button" style="width: 10%;margin-right:10px" value="ذخیره" name="save" />
            <button id="cancel" class="k-primary k-button" style="width: 10%;margin-right:10px" onclick="window.location = '/Tools/Bulks'; return false;"><span>انصراف</span></button>

            <button id="new" class="k-primary k-button" style="width: 10%;margin-right:10px;background-color:green;" value="جدید" onclick="window.location = '/Tools/Bulks/Bulks_Edit'; return false;">جدید</button>

        </div>

        <br />
    </div>


    <script>
        $(document).ready(function () {
            $("#startTime").kendoDateTimePicker();
            $("#endTime").kendoDateTimePicker();


        });
    </script>
    <style>
        .box .k-textbox {
            width: 80px;
        }

        .box .k-button {
            min-width: 80px;
        }
    </style>
}





