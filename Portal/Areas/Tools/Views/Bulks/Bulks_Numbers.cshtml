@model Portal.Models.Bulks_NumbersViewModel
@{
    ViewBag.Title = "شماره های Bulk";
}
@using (Html.BeginForm("Bulks_Numbers", "Bulks", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    if (!Model.BulkId.HasValue)
    {
        return;

    }
    <hr />

    if (TempData["message"] != null)
    {
        <script type="text/javascript">
            alert(@Html.Raw(Json.Encode(TempData["message"])));
        </script>
    }
    if (TempData["saved"] != null && bool.Parse(TempData["saved"].ToString()))
    {
        <script type="text/javascript">
            window.location = '/Tools/Bulks';
        </script>
    }
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->

    <script type="text/javascript" language="javascript">
        jQuery.fn.center = function () {
            this.css("position", "absolute");
            this.css("top", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +
                $(window).scrollTop()) + "px");
            this.css("left", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +
                $(window).scrollLeft()) + "px");
            return this;
        }

        function StartInvoicing() {
            var progressNotifier = $.connection.progressHub;

            progressNotifier.client.sendMessage = function (message, count) {
                UpdateProgress(message, count);
            };

            // establish the connection to the server and start server-side operation
            $.connection.hub.start().done(function () {
                $("#mainDiv").css("background-color", "gray");
                $("#mainDiv").attr('disabled', true);
                $("#progressbarContainer").center();
                $("#progressbarContainer").show();
                // call the method CallLongOperation defined in the Hub
                //progressNotifier.server.getCountAndMessage();
            });
        }

        function UpdateProgress(message, count) {
            var result = $("#progressbar");
            result.html(message);
            if (count == 100) {
                $("#progressbarContainer").hide();
                $("#mainDiv").attr('disabled', false);
            }
            //$("#progressBar").data("kendoProgressBar").value(count);
        }
    </script>


    <div style="width: 500px;background-color:white; margin: 0 auto;display:none;position:absolute;left:50%;text-align:center;" id="progressbarContainer">
        <div id="progressbar" style="font-family: Tahoma;
            font-size: 0.9em; color: darkgray; margin-top: 50px; padding-bottom: 5px;">
            Initializing and Preparing...
        </div>
        <img src="~/Images/loading.gif" style="width:128px;height:128px" />
        <div id="progressbarGif" style="font-family: Tahoma;
            width:0px; margin-top: 70px; padding-bottom: 5px;text-align:center;">

        </div>
    </div>

    <div id="mainDiv">
        @Html.ValidationSummary("", new { @class = "text-danger", style = "color:red" })

        <div class="col-md-10" style="padding-top:10px;">

            @Html.LabelFor(m => m.BulkId, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.BulkId, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;" })

            @Html.LabelFor(m => m.BulkName, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.BulkName, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;width:150px;margin-left:20px;" })

            @Html.LabelFor(m => m.serviceCodeAndName, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.serviceCodeAndName, new { @class = "col-md-2 control-label k-input", @readonly = "true", style = "background-color:#d8d8d8;color:gray;width:150px;margin-left:20px;" })
        </div>
        <div class="col-md-10" style="padding-top:10px;">
            <table>
                <tr>
                    <td style="vertical-align:top;">
                        <table style="border:1px solid black;">
                            <tr>
                                <td style="background-color:gray;font-size:large;text-align:center;" colspan="2">
                                    مبداء
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.RadioButton("BulkFileType", "sqlTable", Model.bulkFileType != "file" && Model.bulkFileType != "upload" && Model.bulkFileType != "list") SqlTable
                                </td>
                                <td>
                                    @Html.DropDownListFor(m => m.sqlTableName, (IEnumerable<SelectListItem>)ViewBag.sqlTablesAndViews, new { @class = "col-md-2 control-label k-input" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.RadioButton("BulkFileType", "file", Model.bulkFileType == "file") ServerFile
                                </td>
                                <td>
                                    @Html.DropDownListFor(m => m.filePath, (IEnumerable<SelectListItem>)ViewBag.serverFilesNames, new { @class = "col-md-2 control-label k-input" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.RadioButton("BulkFileType", "upload", Model.bulkFileType == "upload") UploadFile
                                </td>
                                <td style="text-align:right;">
                                    <input type="file" name="postedFile" />نوع فایهای معتبر .txt  و .csv می باشد. حداکثر حجم 100 مگا بایت.
                                    <br />
                                    فایل بدون نام ستون بوده و تنها 11 کاراکتر اول به عنوان موبایل در نظر گرفته می شود. در صورت انتخاب "شروع با 98" 12 کاراکتر اول به عنوان شماره موبایل انتخاب می شوند
                                </td>
                            </tr>
                            <tr>
                                <td style="vertical-align:middle;">
                                    @Html.RadioButton("BulkFileType", "list", Model.bulkFileType == "list") List <br />(Separated by new line)
                                </td>
                                <td>
                                    @Html.TextAreaFor(m => m.bulkList, new { @class = "col-md-2 control-label k-input", style = "width:125px; height:100px;" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2" style="text-align:right;">
                                    @Html.CheckBoxFor(m => m.mobileNumberStartsWith98, new { @class = "col-md-2 control-label k-input" })
                                    @Html.LabelFor(m => m.mobileNumberStartsWith98, new { @class = "col-md-2 control-label" })
                                </td>
                            </tr>

                        </table>
                    </td>
                    <td style="vertical-align:top;">
                        <table style="border:1px solid black;width:500px;">
                            <tr>
                                <td style="background-color:gray;font-size:large;text-align:center;">
                                    @Html.CheckBoxFor(m => m.save, new { @class = "col-md-2 control-label k-input" })
                                    ذخیره شماره ها در پایگاه داده
                                    (برای حالتهای فایلی و لیستی)
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2" style="text-align:right;">
                                    @Html.RadioButton("destinationType", "sqlTable", Model.destinationType != "createTable") SqlTable
                                    @Html.DropDownListFor(m => m.destinationSqlTableName, (IEnumerable<SelectListItem>)ViewBag.sqlTables, new { @class = "col-md-2 control-label k-input" })
                                    @Html.CheckBoxFor(m => m.deleteOldData, new { @class = "col-md-2 control-label k-input" })
                                    @Html.LabelFor(m => m.deleteOldData, new { @class = "col-md-2 control-label" })
                                </td>

                            </tr>
                            <tr>
                                <td colspan="2" style="text-align:right;">
                                    @Html.RadioButton("destinationType", "createTable", Model.destinationType == "createTable") ایجاد جدول
                                    <div style="direction:ltr;display:inline-block;">(bulkNumbers_{yyyyMMdd_HHmmss})</div>

                                </td>

                            </tr>
                        </table>
                    </td>
                </tr>
            </table>


            <div class="col-md-10" style="padding-top:20px;text-align:center;">
                <input type="submit" id="save" class="k-primary k-button" style="width: 10%;margin-right:10px" value="ذخیره" onclick="StartInvoicing()" />
                <button id="cancel" class="k-primary k-button" style="width: 10%;margin-right:10px" onclick="window.location = '/Tools/Bulks'; return false;"><span>انصراف</span></button>

            </div>

        </div>
    </div>
}