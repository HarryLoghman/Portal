//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharedLibrary.MobinOneServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:tpswsdl", ConfigurationName="MobinOneServiceReference.tpsPortType")]
    public interface tpsPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#charge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string charge(string username, string password, string shortcode, string servicekey, string chargecode, string number, string amount, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#charge", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> chargeAsync(string username, string password, string shortcode, string servicekey, string chargecode, string number, string amount, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#chargeStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string chargeStatus(string username, string password, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#chargeStatus", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> chargeStatusAsync(string username, string password, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#charge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string inAppCharge(string username, string password, string shortcode, string servicekey, string chargecode, string number, string amount, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#charge", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> inAppChargeAsync(string username, string password, string shortcode, string servicekey, string chargecode, string number, string amount, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#charge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string inAppChargeConfirm(string username, string password, string OTPTransactionId, string tps_id, string transactionPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#charge", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> inAppChargeConfirmAsync(string username, string password, string OTPTransactionId, string tps_id, string transactionPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#sendSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string[] sendSms(SharedLibrary.MobinOneServiceReference.ArrayReq msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#sendSms", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string[]> sendSmsAsync(SharedLibrary.MobinOneServiceReference.ArrayReq msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#smsStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string smsStatus(string username, string password, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#smsStatus", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> smsStatusAsync(string username, string password, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#deRegister", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string deRegister(string username, string password, string servicekey, string number, string requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:tpswsdl#deRegister", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> deRegisterAsync(string username, string password, string servicekey, string number, string requestId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:tpswsdl")]
    public partial class ArrayReq : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private string shortcodeField;
        
        private string servicekeyField;
        
        private string[] numberField;
        
        private string[] messageField;
        
        private string[] chargecodeField;
        
        private string[] amountField;
        
        private string typeField;
        
        private string[] requestIdField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        public string shortcode {
            get {
                return this.shortcodeField;
            }
            set {
                this.shortcodeField = value;
                this.RaisePropertyChanged("shortcode");
            }
        }
        
        /// <remarks/>
        public string servicekey {
            get {
                return this.servicekeyField;
            }
            set {
                this.servicekeyField = value;
                this.RaisePropertyChanged("servicekey");
            }
        }
        
        /// <remarks/>
        public string[] number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
                this.RaisePropertyChanged("number");
            }
        }
        
        /// <remarks/>
        public string[] message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        /// <remarks/>
        public string[] chargecode {
            get {
                return this.chargecodeField;
            }
            set {
                this.chargecodeField = value;
                this.RaisePropertyChanged("chargecode");
            }
        }
        
        /// <remarks/>
        public string[] amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("amount");
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        public string[] requestId {
            get {
                return this.requestIdField;
            }
            set {
                this.requestIdField = value;
                this.RaisePropertyChanged("requestId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface tpsPortTypeChannel : SharedLibrary.MobinOneServiceReference.tpsPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class tpsPortTypeClient : System.ServiceModel.ClientBase<SharedLibrary.MobinOneServiceReference.tpsPortType>, SharedLibrary.MobinOneServiceReference.tpsPortType {
        
        public tpsPortTypeClient() {
        }
        
        public tpsPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public tpsPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public tpsPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public tpsPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string charge(string username, string password, string shortcode, string servicekey, string chargecode, string number, string amount, string requestId) {
            return base.Channel.charge(username, password, shortcode, servicekey, chargecode, number, amount, requestId);
        }
        
        public System.Threading.Tasks.Task<string> chargeAsync(string username, string password, string shortcode, string servicekey, string chargecode, string number, string amount, string requestId) {
            return base.Channel.chargeAsync(username, password, shortcode, servicekey, chargecode, number, amount, requestId);
        }
        
        public string chargeStatus(string username, string password, string requestId) {
            return base.Channel.chargeStatus(username, password, requestId);
        }
        
        public System.Threading.Tasks.Task<string> chargeStatusAsync(string username, string password, string requestId) {
            return base.Channel.chargeStatusAsync(username, password, requestId);
        }
        
        public string inAppCharge(string username, string password, string shortcode, string servicekey, string chargecode, string number, string amount, string requestId) {
            return base.Channel.inAppCharge(username, password, shortcode, servicekey, chargecode, number, amount, requestId);
        }
        
        public System.Threading.Tasks.Task<string> inAppChargeAsync(string username, string password, string shortcode, string servicekey, string chargecode, string number, string amount, string requestId) {
            return base.Channel.inAppChargeAsync(username, password, shortcode, servicekey, chargecode, number, amount, requestId);
        }
        
        public string inAppChargeConfirm(string username, string password, string OTPTransactionId, string tps_id, string transactionPIN) {
            return base.Channel.inAppChargeConfirm(username, password, OTPTransactionId, tps_id, transactionPIN);
        }
        
        public System.Threading.Tasks.Task<string> inAppChargeConfirmAsync(string username, string password, string OTPTransactionId, string tps_id, string transactionPIN) {
            return base.Channel.inAppChargeConfirmAsync(username, password, OTPTransactionId, tps_id, transactionPIN);
        }
        
        public string[] sendSms(SharedLibrary.MobinOneServiceReference.ArrayReq msg) {
            return base.Channel.sendSms(msg);
        }
        
        public System.Threading.Tasks.Task<string[]> sendSmsAsync(SharedLibrary.MobinOneServiceReference.ArrayReq msg) {
            return base.Channel.sendSmsAsync(msg);
        }
        
        public string smsStatus(string username, string password, string requestId) {
            return base.Channel.smsStatus(username, password, requestId);
        }
        
        public System.Threading.Tasks.Task<string> smsStatusAsync(string username, string password, string requestId) {
            return base.Channel.smsStatusAsync(username, password, requestId);
        }
        
        public string deRegister(string username, string password, string servicekey, string number, string requestId) {
            return base.Channel.deRegister(username, password, servicekey, number, requestId);
        }
        
        public System.Threading.Tasks.Task<string> deRegisterAsync(string username, string password, string servicekey, string number, string requestId) {
            return base.Channel.deRegisterAsync(username, password, servicekey, number, requestId);
        }
    }
}
