//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharedLibrary.MobinOneMapfaChargingServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.mapfa.net", ConfigurationName="MobinOneMapfaChargingServiceReference.Charging")]
    public interface Charging {
        
        // CODEGEN: Generating message contract since element name username from namespace  is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://services.mapfa.net/Charging/singleChargeRequest", ReplyAction="http://services.mapfa.net/Charging/singleChargeResponse")]
        SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeResponse singleCharge(SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.mapfa.net/Charging/singleChargeRequest", ReplyAction="http://services.mapfa.net/Charging/singleChargeResponse")]
        System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeResponse> singleChargeAsync(SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequest request);
        
        // CODEGEN: Generating message contract since element name username from namespace  is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://services.mapfa.net/Charging/dynamicChargeRequest", ReplyAction="http://services.mapfa.net/Charging/dynamicChargeResponse")]
        SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeResponse dynamicCharge(SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.mapfa.net/Charging/dynamicChargeRequest", ReplyAction="http://services.mapfa.net/Charging/dynamicChargeResponse")]
        System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeResponse> dynamicChargeAsync(SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequest request);
        
        // CODEGEN: Generating message contract since element name username from namespace  is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://services.mapfa.net/Charging/sendVerificationCodeRequest", ReplyAction="http://services.mapfa.net/Charging/sendVerificationCodeResponse")]
        SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeResponse sendVerificationCode(SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.mapfa.net/Charging/sendVerificationCodeRequest", ReplyAction="http://services.mapfa.net/Charging/sendVerificationCodeResponse")]
        System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeResponse> sendVerificationCodeAsync(SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequest request);
        
        // CODEGEN: Generating message contract since element name username from namespace  is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://services.mapfa.net/Charging/verifySubscriberRequest", ReplyAction="http://services.mapfa.net/Charging/verifySubscriberResponse")]
        SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberResponse verifySubscriber(SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.mapfa.net/Charging/verifySubscriberRequest", ReplyAction="http://services.mapfa.net/Charging/verifySubscriberResponse")]
        System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberResponse> verifySubscriberAsync(SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class singleChargeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="singleCharge", Namespace="http://services.mapfa.net", Order=0)]
        public SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequestBody Body;
        
        public singleChargeRequest() {
        }
        
        public singleChargeRequest(SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class singleChargeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string domain;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int channel;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string mobilenum;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string serviceId;
        
        public singleChargeRequestBody() {
        }
        
        public singleChargeRequestBody(string username, string password, string domain, int channel, string mobilenum, string serviceId) {
            this.username = username;
            this.password = password;
            this.domain = domain;
            this.channel = channel;
            this.mobilenum = mobilenum;
            this.serviceId = serviceId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class singleChargeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="singleChargeResponse", Namespace="http://services.mapfa.net", Order=0)]
        public SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeResponseBody Body;
        
        public singleChargeResponse() {
        }
        
        public singleChargeResponse(SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class singleChargeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long @return;
        
        public singleChargeResponseBody() {
        }
        
        public singleChargeResponseBody(long @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class dynamicChargeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="dynamicCharge", Namespace="http://services.mapfa.net", Order=0)]
        public SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequestBody Body;
        
        public dynamicChargeRequest() {
        }
        
        public dynamicChargeRequest(SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class dynamicChargeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string domain;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int channel;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string mobilenum;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string serviceId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public long price;
        
        public dynamicChargeRequestBody() {
        }
        
        public dynamicChargeRequestBody(string username, string password, string domain, int channel, string mobilenum, string serviceId, long price) {
            this.username = username;
            this.password = password;
            this.domain = domain;
            this.channel = channel;
            this.mobilenum = mobilenum;
            this.serviceId = serviceId;
            this.price = price;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class dynamicChargeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="dynamicChargeResponse", Namespace="http://services.mapfa.net", Order=0)]
        public SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeResponseBody Body;
        
        public dynamicChargeResponse() {
        }
        
        public dynamicChargeResponse(SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class dynamicChargeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long @return;
        
        public dynamicChargeResponseBody() {
        }
        
        public dynamicChargeResponseBody(long @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class sendVerificationCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="sendVerificationCode", Namespace="http://services.mapfa.net", Order=0)]
        public SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequestBody Body;
        
        public sendVerificationCodeRequest() {
        }
        
        public sendVerificationCodeRequest(SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class sendVerificationCodeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string domain;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int channel;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string mobilenum;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string serviceId;
        
        public sendVerificationCodeRequestBody() {
        }
        
        public sendVerificationCodeRequestBody(string username, string password, string domain, int channel, string mobilenum, string serviceId) {
            this.username = username;
            this.password = password;
            this.domain = domain;
            this.channel = channel;
            this.mobilenum = mobilenum;
            this.serviceId = serviceId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class sendVerificationCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="sendVerificationCodeResponse", Namespace="http://services.mapfa.net", Order=0)]
        public SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeResponseBody Body;
        
        public sendVerificationCodeResponse() {
        }
        
        public sendVerificationCodeResponse(SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class sendVerificationCodeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long @return;
        
        public sendVerificationCodeResponseBody() {
        }
        
        public sendVerificationCodeResponseBody(long @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class verifySubscriberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="verifySubscriber", Namespace="http://services.mapfa.net", Order=0)]
        public SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequestBody Body;
        
        public verifySubscriberRequest() {
        }
        
        public verifySubscriberRequest(SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class verifySubscriberRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string domain;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int channel;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string mobilenum;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string serviceId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string token;
        
        public verifySubscriberRequestBody() {
        }
        
        public verifySubscriberRequestBody(string username, string password, string domain, int channel, string mobilenum, string serviceId, string token) {
            this.username = username;
            this.password = password;
            this.domain = domain;
            this.channel = channel;
            this.mobilenum = mobilenum;
            this.serviceId = serviceId;
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class verifySubscriberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="verifySubscriberResponse", Namespace="http://services.mapfa.net", Order=0)]
        public SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberResponseBody Body;
        
        public verifySubscriberResponse() {
        }
        
        public verifySubscriberResponse(SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class verifySubscriberResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long @return;
        
        public verifySubscriberResponseBody() {
        }
        
        public verifySubscriberResponseBody(long @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ChargingChannel : SharedLibrary.MobinOneMapfaChargingServiceReference.Charging, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChargingClient : System.ServiceModel.ClientBase<SharedLibrary.MobinOneMapfaChargingServiceReference.Charging>, SharedLibrary.MobinOneMapfaChargingServiceReference.Charging {
        
        public ChargingClient() {
        }
        
        public ChargingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChargingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChargingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChargingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeResponse SharedLibrary.MobinOneMapfaChargingServiceReference.Charging.singleCharge(SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequest request) {
            return base.Channel.singleCharge(request);
        }
        
        public long singleCharge(string username, string password, string domain, int channel, string mobilenum, string serviceId) {
            SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequest inValue = new SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequest();
            inValue.Body = new SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.domain = domain;
            inValue.Body.channel = channel;
            inValue.Body.mobilenum = mobilenum;
            inValue.Body.serviceId = serviceId;
            SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeResponse retVal = ((SharedLibrary.MobinOneMapfaChargingServiceReference.Charging)(this)).singleCharge(inValue);
            return retVal.Body.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeResponse> SharedLibrary.MobinOneMapfaChargingServiceReference.Charging.singleChargeAsync(SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequest request) {
            return base.Channel.singleChargeAsync(request);
        }
        
        public System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeResponse> singleChargeAsync(string username, string password, string domain, int channel, string mobilenum, string serviceId) {
            SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequest inValue = new SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequest();
            inValue.Body = new SharedLibrary.MobinOneMapfaChargingServiceReference.singleChargeRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.domain = domain;
            inValue.Body.channel = channel;
            inValue.Body.mobilenum = mobilenum;
            inValue.Body.serviceId = serviceId;
            return ((SharedLibrary.MobinOneMapfaChargingServiceReference.Charging)(this)).singleChargeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeResponse SharedLibrary.MobinOneMapfaChargingServiceReference.Charging.dynamicCharge(SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequest request) {
            return base.Channel.dynamicCharge(request);
        }
        
        public long dynamicCharge(string username, string password, string domain, int channel, string mobilenum, string serviceId, long price) {
            SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequest inValue = new SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequest();
            inValue.Body = new SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.domain = domain;
            inValue.Body.channel = channel;
            inValue.Body.mobilenum = mobilenum;
            inValue.Body.serviceId = serviceId;
            inValue.Body.price = price;
            SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeResponse retVal = ((SharedLibrary.MobinOneMapfaChargingServiceReference.Charging)(this)).dynamicCharge(inValue);
            return retVal.Body.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeResponse> SharedLibrary.MobinOneMapfaChargingServiceReference.Charging.dynamicChargeAsync(SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequest request) {
            return base.Channel.dynamicChargeAsync(request);
        }
        
        public System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeResponse> dynamicChargeAsync(string username, string password, string domain, int channel, string mobilenum, string serviceId, long price) {
            SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequest inValue = new SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequest();
            inValue.Body = new SharedLibrary.MobinOneMapfaChargingServiceReference.dynamicChargeRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.domain = domain;
            inValue.Body.channel = channel;
            inValue.Body.mobilenum = mobilenum;
            inValue.Body.serviceId = serviceId;
            inValue.Body.price = price;
            return ((SharedLibrary.MobinOneMapfaChargingServiceReference.Charging)(this)).dynamicChargeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeResponse SharedLibrary.MobinOneMapfaChargingServiceReference.Charging.sendVerificationCode(SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequest request) {
            return base.Channel.sendVerificationCode(request);
        }
        
        public long sendVerificationCode(string username, string password, string domain, int channel, string mobilenum, string serviceId) {
            SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequest inValue = new SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequest();
            inValue.Body = new SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.domain = domain;
            inValue.Body.channel = channel;
            inValue.Body.mobilenum = mobilenum;
            inValue.Body.serviceId = serviceId;
            SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeResponse retVal = ((SharedLibrary.MobinOneMapfaChargingServiceReference.Charging)(this)).sendVerificationCode(inValue);
            return retVal.Body.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeResponse> SharedLibrary.MobinOneMapfaChargingServiceReference.Charging.sendVerificationCodeAsync(SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequest request) {
            return base.Channel.sendVerificationCodeAsync(request);
        }
        
        public System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeResponse> sendVerificationCodeAsync(string username, string password, string domain, int channel, string mobilenum, string serviceId) {
            SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequest inValue = new SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequest();
            inValue.Body = new SharedLibrary.MobinOneMapfaChargingServiceReference.sendVerificationCodeRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.domain = domain;
            inValue.Body.channel = channel;
            inValue.Body.mobilenum = mobilenum;
            inValue.Body.serviceId = serviceId;
            return ((SharedLibrary.MobinOneMapfaChargingServiceReference.Charging)(this)).sendVerificationCodeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberResponse SharedLibrary.MobinOneMapfaChargingServiceReference.Charging.verifySubscriber(SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequest request) {
            return base.Channel.verifySubscriber(request);
        }
        
        public long verifySubscriber(string username, string password, string domain, int channel, string mobilenum, string serviceId, string token) {
            SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequest inValue = new SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequest();
            inValue.Body = new SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.domain = domain;
            inValue.Body.channel = channel;
            inValue.Body.mobilenum = mobilenum;
            inValue.Body.serviceId = serviceId;
            inValue.Body.token = token;
            SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberResponse retVal = ((SharedLibrary.MobinOneMapfaChargingServiceReference.Charging)(this)).verifySubscriber(inValue);
            return retVal.Body.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberResponse> SharedLibrary.MobinOneMapfaChargingServiceReference.Charging.verifySubscriberAsync(SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequest request) {
            return base.Channel.verifySubscriberAsync(request);
        }
        
        public System.Threading.Tasks.Task<SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberResponse> verifySubscriberAsync(string username, string password, string domain, int channel, string mobilenum, string serviceId, string token) {
            SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequest inValue = new SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequest();
            inValue.Body = new SharedLibrary.MobinOneMapfaChargingServiceReference.verifySubscriberRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.domain = domain;
            inValue.Body.channel = channel;
            inValue.Body.mobilenum = mobilenum;
            inValue.Body.serviceId = serviceId;
            inValue.Body.token = token;
            return ((SharedLibrary.MobinOneMapfaChargingServiceReference.Charging)(this)).verifySubscriberAsync(inValue);
        }
    }
}
